package model {	import flash.events.EventDispatcher;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;		public class Model extends EventDispatcher	{				public static const MODEL_CHANGED:String = "Model changed";				private var loader:URLLoader = new URLLoader();		private var req:URLRequest = new URLRequest("XML.xml");				private var myXML:XMLList;		private var xml:XML;				public var currentUrl:String;		public var currentIndex:int = 0;		public var currentTitle:String;				public function Model() 		{ 			loader.load(req);			loader.addEventListener(Event.COMPLETE, loadXML);		}				private function loadXML(e:Event):void		{			xml = new XML(e.target.data);			setCurrentIndex(currentIndex);					setCurrentTitle();		}				public function setCurrentIndex(index:int):void		{			currentIndex = index;			controlIndex(currentIndex);						setCurrentTitle();						setCurrentUrl(currentIndex);						updateData();					}					private function setCurrentTitle():void		{			currentTitle = xml.image[currentIndex].title;		}				private function updateData():void		{			dispatchEvent(new Event(Model.MODEL_CHANGED));		}				private function controlIndex(index:int):void		{			if (index < 0)			{				currentIndex = xml.image.length() - 1;			}			else if (index > xml.image.length() - 1)			{				currentIndex = 0;			}					}				private function setCurrentUrl(currentIndex:int)		{			currentUrl = xml.image[currentIndex].source;		}			}	}